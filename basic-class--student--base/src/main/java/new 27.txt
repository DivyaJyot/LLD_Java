9 6 17 23 7 -1 -1 -1 -1 -1 -1
public class Solution {
    Queue<TreeNode> q= new LinkedList<>();
     public ArrayList<Integer> solve(TreeNode A) {
        ArrayList<Integer> list= new ArrayList<Integer>();
        levelOrderTraversal(A,list);
        return list;
    }


    public void levelOrderTraversal(TreeNode A, ArrayList<Integer> list){
        q.add(A);
		q.add(null);
        TreeNode last=null;
        while(!q.isEmpty()){
            TreeNode x= q.poll();
            if(x==null && last==null){
                break;
            }
			if(last==null){
				list.add(x.val);
			}
            if(x==null){
                q.add(null);
            }
			else{
                if(x.right!=null && x.right.val!=-1)
            q.add(x.right);
              if(x.left !=null &&x.left.val!=-1)
            q.add(x.left);
            q.add(null);
            }
			last=x;

        }
    }
}

9 null 17 6 null 7 23 null 